let arr = [ 1, "str", false];
// js的数组，不仅仅储存了数据，而是一个对象
// console.log(arr);
// console.log(arr[2]);
//数组的 遍历

// 循环的三要素
// count 叫“循环控制变量”
// 赋初值 
// let count = 0;

// 给条件
// while ( count < 3 ) {
//   console.log(arr[count]);
//   // 趋向于循环结束
//   count++;
// }
// let count;
// 介绍另一种循环的写法，for循环
//       1              2        3
for ( let count = 0; count < 3 ; count++ ) {
  // 1的代码，只在循环的开始的时候执行一次，往往被用来赋初值
  // 2的代码，每次循环开始前都会执行，如果结果为真，则运行{}中的代码，往往用来给条件
  // 3的代码，每次{}中的循环体执行完毕后，都会执行一次，往往用来让循环趋向于结束
  console.log(arr[count]);
}

// 数组完成了数据的“序列化”，就是把数据更好的组织了起来
// 如何把人类的自然语言，转化成计算机能听懂的计算机语言。
//  let x1= 1, x2=2, x3=33;
// 对一个数组进行排序

// 把数组从小到大排列，冒泡法
let numArr = [ 12, 34, 44, 1234, 21, 8, 240, 77, 65];

// 以下就是冒泡法排序的基本演示

// 56   23  13   4   // 1，2比较，大的放2，小的放1
// 23   56  13   4   // 1，3比较，大的放3，小的放1
// 13   56  23   4   // 1，4比较，大的放4，小的放1
// 4    56  23   13  // 4 肯定是最小的，接下来只比较剩余的3个数


// 56 23 13  // 1，2比较，大的放2，小的放1
// 23 56 13  // 1，3比较，大的放3，小的放1
// 13 56 23  // 13 肯定是最小的，接下来只比较剩余的2个数

// 56 23 // 1，2比较，大的放2，小的放1
// 23 56

// 56 

// 4 13 23 56  // 这就是为什么他叫冒泡法排序
for(let k =1; k<9; k++){
  for (let i = 0; i < 9; i++) {
    if ( numArr[i] > numArr[i+1]) {
      // 交换
    let tmp = numArr[i];
    numArr[i] = numArr[i+1];
    numArr[i+1] = tmp;
    }else{
      
    }
    console.log(numArr);
  }
}

